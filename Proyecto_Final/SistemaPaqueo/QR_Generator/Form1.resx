<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="qrCodeImgControl1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>